-- 7) - Operadores relacionales
-------------------------------


use Curso_SqlServer;


-- Trabajamos con la tabla "libros" de una librería.

-- Ver las tablas existentes en esta base de datos
sp_tables @table_owner='dbo';

-- Ver la estructura de la tabla libros
sp_columns libros;

-- Ver todos los registros de la tabla libros
select * from libros;

-- Agregamos registros a la tabla
insert into libros(titulo, autor, editorial, precio) values('Aprenda PHP', 'Mario Molina', 'Emece', 35.40);
insert into libros(titulo, autor, editorial, precio) values('Cervantes y el quijote', 'Borges', 'Paidos', 50.90);


-- Seleccionamos los registros cuyo autor sea diferente de 'Borges'
select * from libros where autor <> 'Borges';

-- Seleccionamos los registros cuyo precio supere los 20 pesos, sólo el título y precio
select titulo, precio from libros where precio > 20;


-- Note que el valor con el cual comparamos el campo "precio", como es numérico (float), no se coloca 
-- entre comillas. Los libros cuyo precio es menor o igual a 20 pesos no aparece en la selección.
-- Recuperamos aquellos libros cuyo precio es menor o igual a 30
select * from libros where precio <= 30;
-- ************************************************* --





-- Un comercio que vende artículos de computación registra los datos de sus artículos en una 
-- tabla con ese nombre.

-- 1- Elimine "articulos", si existe
-- 2- Cree la tabla, con la siguiente estructura: codigo integer, nombre varchar(20), 
-- descripcion varchar(30), precio float, cantidad integer
if OBJECT_ID('articulos') is not null
	drop table articulos;

create table articulos(codigo int, nombre varchar(20), descripcion varchar(30), precio float, cantidad integer);

-- 3- Vea la estructura de la tabla (sp_columns).
sp_columns articulos;

-- 4- Ingrese algunos registros
 
insert into articulos(codigo, nombre, descripcion, precio, cantidad) values(1, 'impresora', 'Epson Stylus C45', 400.80, 20);
insert into articulos(codigo, nombre, descripcion, precio, cantidad) values(2, 'impresora', 'Epson Stylus C85', 500, 30);
insert into articulos(codigo, nombre, descripcion, precio, cantidad) values(3, 'monitor', 'Samsung 14', 800, 10);
insert into articulos(codigo, nombre, descripcion, precio, cantidad) values(4,'teclado','ingles Biswal', 100, 50);
insert into articulos(codigo, nombre, descripcion, precio, cantidad) values(5, 'teclado', 'español Biswal', 90, 50);

select * from articulos;


-- 5- Seleccione los datos de las impresoras (2 registros)
select * from articulos where nombre like '%impresora%';

-- 6- Seleccione los artículos cuyo precio sea mayor o igual a 400 (3 registros)
select * from articulos where precio >= 400;

-- 7- Seleccione el código y nombre de los artículos cuya cantidad sea menor a 30 (2 registros)
select codigo, nombre from articulos where cantidad < 30;

-- 8- Selecciones el nombre y descripción de los artículos que NO cuesten $100 (4 registros)
select nombre, descripcion from articulos where precio <> 100;
-- ************************************************* --





-- Un video club que alquila películas en video almacena la información de sus películas en alquiler en 
-- una tabla denominada "peliculas".
-- 1- Elimine la tabla, si existe
-- 2- Cree la tabla eligiendo el tipo de dato adecuado para cada campo
sp_columns peliculas;
select * from peliculas;
delete from peliculas;
create table peliculas(titulo varchar(20), actor varchar(20), duracion integer, cantidad integer);


-- 3- Ingrese los siguientes registros
insert into peliculas(titulo, actor, duracion, cantidad) values('Mision imposible', 'Tom Cruise', 120,3);
insert into peliculas(titulo, actor, duracion, cantidad) values('Mision imposible 2','Tom Cruise', 180,4);
insert into peliculas(titulo, actor, duracion, cantidad) values('Mujer bonita','Julia R.', 90,1);
insert into peliculas(titulo, actor, duracion, cantidad) values('Elsa y Fred','China Zorrilla', 80,2);

select * from peliculas;

-- 4- Seleccione las películas cuya duración no supere los 90 minutos (2 registros)
select * from peliculas where duracion < 90;

-- 5- Seleccione el título de todas las películas en las que el actor NO sea "Tom Cruise" (2 registros)
select titulo from peliculas where actor <> 'Tom Cruise';

-- 6- Muestre todos los campos, excepto "duracion", de todas las películas de las que haya más de 2 copias (2 registros)
select nombre, actor, cantidad, titulo from peliculas where cantidad > 1;
