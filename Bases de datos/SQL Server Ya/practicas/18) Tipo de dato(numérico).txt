-- 18 - Tipo de dato(numérico)
-------------------------------

-- Problema: Trabajamos con la tabla "libros" de una librería.

-- Eliminamos la tabla, si existe
if object_id('libros') is not null
drop table libros;

-- Creamos la tabla con la siguiente estructura
create table libros(codigo smallint identity,
titulo varchar(40) not null,
autor varchar(30),
editorial varchar(15),
precio smallmoney,
cantidad tinyint);
-- Note que definimos el campo "codigo" de tipo "smallint", esto es porque estimamos que no tendremos más de 30000 libros. 
-- Si necesitáramos un rango mayor podemos emplear "int".
-- Como en el campo "precio" no almacenaremos valores mayores a 200000, definimos el campo de tipo "smallmoney".
-- También podemos definirlo de tipo "decimal(5,2)" porque el máximo precio no superará los 999.99.
-- El tipo "float" no es el más adecuado para representar precios porque no es exacto y muestra muchos decimales innecesarios.
-- Como los valores para el campo "cantidad" no superarán los 255, definimos el campo de tipo "tinyint". 
-- Si estimamos que tendremos más cantidad de libros podemos emplear "smallint" que tiene un rango mayor; no es adecuado usar 
-- int (cuyo rango llega hasta 4000 millones aprox.), porque ocuparíamos más espacio (4 bytes).


-- Analicemos la inserción de datos numéricos.
-- Intentemos ingresar un valor fuera del rango definido, una cantidad que supera el rango del tipo "tinyint", el valor 260
insert into libros(titulo, autor, editorial, precio, cantidad) values('El aleph', 'Borges', 'Emece', 25.60, 260);
-- aparece un mensaje de error y la inserción no se ejecuta.


-- Intentamos ingresar un precio que supera el rango del tipo "smallmoney", el valor 250000
insert into libros(titulo, autor, editorial, precio, cantidad) values('El aleph', 'Borges', 'Emece', 250000, 100);
--aparece un mensaje de error y la instrucción no se ejecuta.

-- Intentamos ingresar una cadena que SQL Server no pueda convertir a valor numérico en el campo "precio" (error)
insert into libros(titulo, autor, editorial, precio, cantidad) values('Uno', 'Richard Bach', 'Planeta', 'a50.30', 100);
-- Ingresamos una cadena en el campo "cantidad"

insert into libros(titulo, autor, editorial, precio, cantidad) values('Uno', 'Richard Bach', 'Planeta', 50.30, '100');
-- lo convierte a valor numérico.
--****************************************************************************************************************************--










--Primer problema: Un banco tiene registrados las cuentas corrientes de sus clientes en una tabla llamada "cuentas".
-- La tabla contiene estos datos
Número de Cuenta	Documento	Nombre		Saldo
______________________________________________________________
1234			25666777	Pedro Perez		500000.60
2234			27888999	Juan Lopez		-250000
3344			27888999	Juan Lopez		4000.50
3346			32111222	Susana Molina	1000


-- 1- Elimine la tabla "cuentas" si existe
if OBJECT_ID('cuentas') is not null
drop table cuentas;


-- 2- Cree la tabla eligiendo el tipo de dato adecuado para almacenar los datos descriptos arriba
- Número de cuenta: entero, no nulo, no puede haber valores repetidos, clave primaria;
- Documento del propietario de la cuenta: cadena de caracteres de 8 de longitud (siempre 8), no nulo;
- Nombre del propietario de la cuenta: cadena de caracteres de 30 de longitud,
- Saldo de la cuenta: valores altos con decimales.
create table cuentas( numero int not null,
documento char(8) not null,
nombre varchar(30),
saldo money,
primary key(numero)
);


-- 3- Ingrese los siguientes registros
insert into cuentas(numero, documento, nombre, saldo) values('1234', '25666777', 'Pedro Perez', 500000.60);
insert into cuentas(numero, documento, nombre, saldo) values('2234', '27888999', 'Juan Lopez', -250000);
insert into cuentas(numero, documento, nombre, saldo) values('3344', '27888999', 'Juan Lopez', 4000.50);
insert into cuentas(numero, documento, nombre, saldo) values('3346', '32111222', 'Susana Molina', 1000);
-- Note que hay dos cuentas, con distinto número de cuenta, de la misma persona.
select * from cuentas;



-- 4- Seleccione todos los registros cuyo saldo sea mayor a "4000" (2 registros)
select * from cuentas where saldo > 4000;


-- 5- Muestre el número de cuenta y saldo de todas las cuentas cuyo propietario sea "Juan Lopez" (2 registros)
select documento, saldo from cuentas where nombre = 'Juan Lopez';

-- 6- Muestre las cuentas con saldo negativo (1 registro)
select * from cuentas where saldo < 0;


--7- Muestre todas las cuentas cuyo número es igual o mayor a "3000" (2 registros):
select * from cuentas where numero >= 3000; 
 --**********************************************************************************************************************************--






-- Segundo problema: Una empresa almacena los datos de sus empleados en una tabla "empleados" que guarda los siguientes datos: 
-- nombre, documento, sexo, domicilio, sueldobasico.

-- 1- Elimine la tabla, si existe
if object_id('empleados') is not null
drop table empleados;

-- 2- Cree la tabla eligiendo el tipo de dato adecuado para cada campo
create table empleados(nombre varchar(30),
documento char(8),
sexo char(1),
domicilio varchar(30),
sueldobasico decimal(7,2), /*maximo estimado 99999.99*/
cantidadhijos tinyint /*no superara los 255*/
);

-- 3- Ingrese algunos registro
insert into empleados(nombre, documento, sexo, domicilio, sueldobasico, cantidadhijos) values('Juan Perez', '22333444', 'm', 'Sarmiento 123', 500, 2);
insert into empleados(nombre, documento, sexo, domicilio, sueldobasico, cantidadhijos) values('Ana Acosta', '24555666', 'f', 'Colon 134', 850, 0);
insert into empleados(nombre, documento, sexo, domicilio, sueldobasico, cantidadhijos) values('Bartolome Barrios', '27888999', 'm', 'Urquiza 479', 10000.80, 4);



-- 4- Ingrese un valor de "sueldobasico" con más decimales que los definidos (redondea los decimales al valor más cercano 800.89):
insert into empleados(nombre, documento, sexo, domicilio, sueldobasico, cantidadhijos) values('Susana Molina', '29000555', 'f', 'Salta 876', 800.888, 3);
select * from empleados;


-- 5- Intente ingresar un sueldo que supere los 7 dígitos (no lo permite)
insert into empleados(nombre, documento, sexo, domicilio, sueldobasico, cantidadhijos) values('Susi Molas', '29000556', 'f', 'Salta 800', 80000000.888, 3);


-- 6- Muestre todos los empleados cuyo sueldo no supere los 900 pesos (1 registro)
select * from empleados where sueldobasico < 900;



-- 7- Seleccione los nombres de los empleados que tengan hijos (3 registros)
select * from empleados where cantidadhijos > 0;