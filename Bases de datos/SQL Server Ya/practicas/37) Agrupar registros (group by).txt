-- 37) Agrupar registros (group by)
-----------------------------------

use Curso_SqlServer;

-- Problema: Trabajamos con la tabla "libros" de una librería. 
-- Eliminamos la tabla, si existe
if object_id('libros') is not null
drop table libros;


-- Creamos la tabla
create table libros(codigo int identity,
titulo varchar(40),
autor varchar(30),
editorial varchar(15),
precio decimal(5, 2),
cantidad tinyint,
primary key(codigo)
);


-- Ingresamos algunos registros
insert into libros values('El aleph', 'Borges', 'Planeta', 15, null);
insert into libros values('Martin Fierro', 'Jose Hernandez', 'Emece', 22.20, 200);
insert into libros values('Antologia poetica', 'J.L. Borges', 'Planeta', null, 150);
insert into libros values('Aprenda PHP', 'Mario Molina', 'Emece', 18.20, null);
insert into libros values('Cervantes y el quijote', 'Bioy Casares- J.L. Borges', 'Paidos', null, 100);
insert into libros values('Manual de PHP', 'J.C. Paez', 'Siglo XXI', 31.80, 120);
insert into libros values('Harry Potter y la piedra filosofal', 'J.K. Rowling', default, 45.00, 90);
insert into libros values('Harry Potter y la camara secreta', 'J.K. Rowling', 'Emece', null, 100);
insert into libros values('Alicia en el pais de las maravillas', 'Lewis Carroll', 'Paidos', 22.50, 200);
insert into libros values('PHP de la A a la Z', null, null, null, 0);

select * from libros;

-- Queremos saber la cantidad de libros de cada editorial, utilizando la cláusula "group by"

select count(*) as total from libros where editorial = 'Planeta';
select count(*) as total from libros where editorial = 'Emece';
select editorial, count(*) as total
from libros
group by editorial;
-- El resultado muestra los nombres de las editoriales y la cantidad de registros para cada valor 
-- del campo. Note que los valores nulos se procesan como otro grupo.

-- Obtenemos la cantidad libros con precio no nulo de cada editorial
select editorial, count(precio) as total
from libros
group by editorial;
-- La salida muestra los nombres de las editoriales y la cantidad de registros de cada una, 
-- sin contar los que tienen precio nulo.

-- Para conocer el total en dinero de los libros agrupados por editorial, tipeamos
select editorial, sum(precio) as total
from libros
group by editorial;

-- Obtenemos el máximo y mínimo valor de los libros agrupados por editorial, en una sola sentencia
select editorial, max(precio) as maximo, min(precio) as minimo
from libros
group by editorial;

-- Calculamos el promedio del valor de los libros agrupados por editorial
select editorial, avg(precio) as promedio
from libros
group by editorial;

-- Es posible limitar la consulta con "where". Vamos a contar y agrupar por editorial considerando 
-- solamente los libros cuyo precio es menor a 30 pesos
select editorial, count(*) as total
from libros
where precio < 30
group by editorial;
-- Note que las editoriales que no tienen libros que cumplan la condición, no aparecen en la salida. 

-- Para que aparezcan todos los valores de editorial, incluso los que devuelven cero o "null" en 
-- la columna de agregado, debemos emplear la palabra clave "all" al lado de "group by"
select editorial, count(*) as total
from libros
where precio < 30
group by all editorial;
-------------------------------------------------------------------------------------------------------




-- Primer problema: Un comercio que tiene un stand en una feria registra en una tabla llamada 
-- "visitantes" algunos datos de las personas que visitan o compran en su stand para luego 
-- enviarle publicidad de sus productos.

-- Elimine la tabla "visitantes", si existe
if object_id('visitantes') is not null
drop table visitantes;

-- Cree la tabla con la siguiente estructura
create table visitantes(nombre varchar(30),
edad tinyint,
sexo char(1) default 'f',
domicilio varchar(30),
ciudad varchar(20) default 'Cordoba',
telefono varchar(11),
mail varchar(30) default 'no tiene',
montocompra decimal(6, 2)
);


-- Ingrese algunos registros
insert into visitantes values ('Susana Molina',35,default,'Colon 123',default,null,null,59.80);
insert into visitantes values ('Marcos Torres',29,'m',default,'Carlos Paz',default,'marcostorres@hotmail.com',150.50);
insert into visitantes values ('Mariana Juarez',45,default,default,'Carlos Paz',null,default,23.90);
insert into visitantes (nombre, edad,sexo,telefono, mail) values ('Fabian Perez',36,'m','4556677','fabianperez@xaxamail.com');
insert into visitantes (nombre, ciudad, montocompra) values ('Alejandra Gonzalez','La Falda',280.50);
insert into visitantes (nombre, edad,sexo, ciudad, mail,montocompra) values ('Gaston Perez',29,'m','Carlos Paz','gastonperez1@gmail.com',95.40);
insert into visitantes values ('Liliana Torres',40,default,'Sarmiento 876',default,default,default,85);
insert into visitantes values ('Gabriela Duarte',21,null,null,'Rio Tercero',default,'gabrielaltorres@hotmail.com',321.50);

select * from visitantes;

-- Queremos saber la cantidad de visitantes de cada ciudad utilizando la cláusula "group by" (4 filas devueltas)
select count(*) as total from visitantes where ciudad = 'Cordoba';
select count(*) as total from visitantes where ciudad = 'Carlos Paz';

select ciudad, count(*) as total
from visitantes
group by ciudad;
 

 -- Queremos la cantidad visitantes con teléfono no nulo, de cada ciudad (4 filas devueltas)
select ciudad, count(telefono) cantidad
from visitantes
group by ciudad;

-- Necesitamos el total del monto de las compras agrupadas por sexo (3 filas)
select sexo, sum(montocompra) as total
from visitantes
group by sexo;


-- Se necesita saber el máximo y mínimo valor de compra agrupados por sexo y ciudad (6 filas)
select sexo, 
		ciudad, 
		max(montocompra) as mayor_valor, min(montocompra) as menor_valor
from visitantes
group by sexo, 
		ciudad;

-- Calcule el promedio del valor de compra agrupados por ciudad (4 filas)
select ciudad, avg(montocompra) as promedio
from visitantes
group by ciudad;


-- Cuente y agrupe por ciudad sin tener en cuenta los visitantes que no tienen mail (3 filas)
select ciudad, count(mail) as total
from visitantes
group by ciudad;

select ciudad, count(*) as 'cantidad con mail'
from visitantes
where mail is not null 
and mail <> 'no tiene'
group by ciudad;


-- Realice la misma consulta anterior, pero use la palabra clave "all" para mostrar todos los 
-- valores de ciudad, incluyendo las que devuelven cero o "null" en la columna de agregado (4 filas)
select ciudad, count(*) as 'cantidad con mail'
from visitantes
where mail is not null 
and mail <> 'no tiene'
group by all ciudad;

