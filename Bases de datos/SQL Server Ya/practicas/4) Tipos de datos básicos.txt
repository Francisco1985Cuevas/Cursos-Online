-- 4) Tipos de datos básicos
------------------------------

/*
Vamos a crear una tabla llamada "libros". En primer lugar vamos a eliminar 
la tabla "libros" averiguando si existe
*/
if OBJECT_ID('libros') is not null
	drop table libros;

/*
Para almacenar información de los libros de una librería necesitamos los siguientes campos
-titulo, cadena de caracteres de 20 de longitud,
-autor, cadena de caracteres de 15 de longitud,
-editorial, caracteres de 10 de longitud,
-precio, valor numérico con decimales y
-cantidad, valor numérico entero.
Al crear la tabla, entonces, elegimos el tipo de dato más adecuado para cada campo

Note que al especificar el tipo de dato de los campos numéricos, no colocamos entre 
paréntesis la longitud.
*/
create table libros(titulo varchar(20), autor varchar(15), editorial varchar(10), precio float,
cantidad int);

-- Veamos las tablas existentes
sp_tables @table_owner='dbo';

-- Vemos la estructura de la tabla
sp_columns libros;

/*
Ingresamos algunos registros
insert into libros (titulo, autor, editorial, precio, cantidad) 
values('El aleph', 'Borges', 'Emece', 25.50, 100);
insert into libros (titulo, autor, editorial, precio, cantidad) 
values('Matematica estas ahi','Paenza','Siglo XXI',18.8,200);
Note que al ingresar valores numéricos (float e integer) no se utilizan comillas y para el separador de decimales se usa el caracter punto(.).
*/

insert into libros(titulo, autor, editorial, precio, cantidad) values('El aleph', 'Borges', 'Emece', 25.50, 100);
insert into libros(titulo, autor, editorial, precio, cantidad) values('Matematica estas ahi', 'Siglo XXI', 'Emece', 28.8, 200);

-- Veamos los registros cargados
select * from libros;

/*
Veamos lo que sucede si intentamos ingresar para el campo "titulo" una cadena de más de 20 caracteres
insert into libros (titulo, autor, editorial, precio, cantidad)
values ('Alicia en el pais de las maravillas','Lewis Carroll','Atlantida',10,200);
aparece un mensaje de error y la sentencia no se ejecuta.
*/
insert into libros(titulo, autor, editorial, precio, cantidad) 
values('Alicia en el pais de las maravillas', 'Lewis Carroll', 'Atlantida', 10, 200);

/*
vamos a cortar la cadena para que SQL Server acepte el ingreso del registro:
insert into libros (titulo,autor,editorial,precio,cantidad)
values ('Alicia en el pais','Lewis Carroll','Atlantida',10,200);
*/
insert into libros(titulo, autor, editorial, precio, cantidad) 
values('Alicia en el pais', 'Lewis Carroll', 'Atlantida', 10, 200);

-- Veamos los registros cargados:
select * from libros;
-- ************************************************* --





/* 
Un videoclub que alquila películas en video almacena la información de sus películas en una tabla 
llamada "peliculas"; para cada película necesita los siguientes datos:
- nombre, cadena de caracteres de 20 de longitud,
- actor, cadena de caracteres de 20 de longitud,
- duración, valor numérico entero.
- cantidad de copias: valor entero.
Elimine la tabla, si existe.
Cree la tabla eligiendo el tipo de dato adecuado para cada campo.
*/
if OBJECT_ID('peliculas') is not null
	drop table peliculas;

create table peliculas(nombre varchar(20), actor varchar(20), duracion int, cantidad int);

-- Vea la estructura de la tabla
sp_columns peliculas;

-- ver todas las tablas
sp_tables @table_owner='dbo';


-- Ingrese los siguientes registros
insert into peliculas(nombre, actor, duracion, cantidad) values('Mision imposible','Tom Cruise', 128, 3);
insert into peliculas(nombre, actor, duracion, cantidad) values('Mision imposible 2','Tom Cruise', 130, 2);
insert into peliculas (nombre, actor, duracion, cantidad) values('Mujer bonita', 'Julia Roberts', 118, 3);
insert into peliculas (nombre, actor, duracion, cantidad) values('Elsa y Fred', 'China Zorrilla', 110, 2);

-- Muestre todos los registros.
select * from peliculas;
-- ************************************************* --





/*
Una empresa almacena los datos de sus empleados en una tabla "empleados" que guarda los 
siguientes datos: nombre, documento, sexo, domicilio, sueldobasico.
*/
-- Elimine la tabla, si existe
if OBJECT_ID('empleados') is not null
	drop table empleados;

-- Cree la tabla eligiendo el tipo de dato adecuado para cada campo
create table empleados(nombre varchar(20), documento varchar(8), sexo varchar(1), 
domicilio varchar(30), sueldobasico float);
 
-- Vea la estructura de la tabla:
sp_columns empleados;


-- Ingrese algunos registros
insert into empleados(nombre, documento, sexo, domicilio, sueldobasico) 
values('Juan Perez', '22333444', 'm', 'Sarmiento 123', 500);

insert into empleados(nombre, documento, sexo, domicilio, sueldobasico) 
values('Ana Acosta', '24555666', 'f', 'Colon 134', 650);

insert into empleados(nombre, documento, sexo, domicilio, sueldobasico) 
values('Bartolome Barrios', '27888999', 'm', 'Urquiza 479', 800);

-- Seleccione todos los registros
select * from empleados;
-- ************************************************* --